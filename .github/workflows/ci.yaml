name: CI Suite
on:
  - pull_request

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
        bundler-cache: true
    - run: bundle exec rake rubocop
  system_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
        bundler-cache: true
      env:
        BUNDLE_GEMFILE: ./spec/dummy/Gemfile
    - run: bundle exec rails test:system
      working-directory: ./spec/dummy
  # Some coverage goals of these tests:
  # - Test once without Rails at all
  # - Test postgres, to make sure that the ActiveRecord
  #   stuff works on that (as well as the default sqlite)
  # - Test mongoid -- and several versions, since they're quite different
  # - Run the JS unit tests once
  # - Test each major version of Rails we support
  # - Test the min/max minor Ruby version we support (and others?)
  # - Include `COVERAGE=1` on a Rails test, since some tests only apply to Rails
  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - gemfile: Gemfile
            ruby: 3.0
            bundler: "1"
          - gemfile: gemfiles/rails_4.2.gemfile
            ruby: 2.4
            bundler: "1"
          - gemfile: gemfiles/rails_5.2.gemfile
            ruby: 2.7
          # Rails 6.1 is tested with Postgresql below
          - gemfile: gemfiles/rails_7.0.gemfile
            ruby: 3.0
          - gemfile: gemfiles/rails_master.gemfile
            ruby: 3.0
          - gemfile: gemfiles/rails_master.gemfile
            ruby: truffleruby-head
    runs-on: ubuntu-latest
    steps:
    - run: echo BUNDLE_GEMFILE=${{ matrix.gemfile }} > $GITHUB_ENV
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true
        bundler: ${{ matrix.bundler || 'default' }}
    - run: bundle exec rake test
  javascript_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7
        bundler-cache: true
    - run: bundle exec rake js:all
  postgres_test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - run: echo COVERAGE=1 > $GITHUB_ENV
    - run: echo BUNDLE_GEMFILE='gemfiles/rails_6.1_postgresql.gemfile' > $GITHUB_ENV
    - run: echo DATABASE='POSTGRESQL' > $GITHUB_ENV
    - run: echo PGPASSWORD='postgres' > $GITHUB_ENV
    - run: echo GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} > $GITHUB_ENV
    - run: echo GITHUB_COMMENTS_URL=${{ github.event.pull_request.comments_url }} > $GITHUB_ENV
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7
        bundler-cache: true
    - run: bundle exec rake test
    - name: Upload coverage report
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: head-result
        path: coverage/.resultset.json
  compare_coverage:
    name: 'Compare base & head coverages'
    runs-on: ubuntu-latest
    needs: [build-base, build-head]
    steps:
    - name: Download base artifact
      uses: actions/download-artifact@v1
      with:
        name: base-result

    - name: Download head artifact
      uses: actions/download-artifact@v1
      with:
        name: head-result
    - uses: kzkn/simplecov-resultset-diff-action@v1
      with:
        base-resultset-path: 'base-result/.resultset.json'
        head-resultset-path: 'head-result/.resultset.json'
        token: ${{ secrets.GITHUB_TOKEN }}
  mongodb_test:
    strategy:
      fail-fast: false
      matrix:
        gemfile:
          - gemfiles/mongoid_6.gemfile
          - gemfiles/mongoid_7.gemfile
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo
        ports:
        - 27017:27017
    steps:
    - run: echo BUNDLE_GEMFILE=${{ matrix.gemfile }} > $GITHUB_ENV
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7
        bundler-cache: true
    - run: bundle exec rake test
build-base:
  name: 'Build base'
  runs-on: ubuntu-latest
  steps:
  - uses: actions/checkout@v2
    with:
      ref: ${{ github.base_ref }}

  - id: base-ref-commit
    run: echo "::set-output name=revision::`git rev-parse HEAD`"

  - name: simplecov resultset cache
    id: simplecov-resultset
    uses:  actions/cache@v2
    with:
      path: coverage/.resultset.json
      key: simplecov-resultset-${{ steps.base-ref-commit.outputs.revision }}

  - uses: ruby/setup-ruby@v1
    if: steps.simplecov-resultset.outputs.cache-hit != 'true'
    with:
      bundler-cache: true

  - name: Run test
    if: steps.simplecov-resultset.outputs.cache-hit != 'true'
    run: bundle exec rspec

  - name: Upload coverage report
    if: always()
    uses: actions/upload-artifact@v2
    with:
      name: base-result
      path: coverage/.resultset.json
