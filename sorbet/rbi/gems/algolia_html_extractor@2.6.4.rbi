# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `algolia_html_extractor` gem.
# Please instead update this file by running `bin/tapioca gem algolia_html_extractor`.

# Extract content from an HTML page in the form of items with associated
# headings data
#
# source://algolia_html_extractor//lib/algolia_html_extractor.rb#8
module AlgoliaHTMLExtractor
  class << self
    # Getting a list of HTML nodes from an input and a CSS selector
    #
    # source://algolia_html_extractor//lib/algolia_html_extractor.rb#20
    def css(input, selector); end

    # Extractor options, applying default options when none set
    #
    # source://algolia_html_extractor//lib/algolia_html_extractor.rb#10
    def default_options(options); end

    # Returns the anchor to the node
    #
    # eg.
    # <h1 name="anchor">Foo</h1> => anchor
    # <h1 id="anchor">Foo</h1> => anchor
    # <h1><a name="anchor">Foo</a></h1> => anchor
    #
    # source://algolia_html_extractor//lib/algolia_html_extractor.rb#120
    def extract_anchor(node); end

    # Returns the outer HTML of a given node
    #
    # eg.
    # <p>foo</p> => <p>foo</p>
    #
    # source://algolia_html_extractor//lib/algolia_html_extractor.rb#94
    def extract_html(node); end

    # Returns the tag name of a given node
    #
    # eg
    # <p>foo</p> => p
    #
    # source://algolia_html_extractor//lib/algolia_html_extractor.rb#110
    def extract_tag_name(node); end

    # Returns the inner HTML of a given node
    #
    # eg.
    # <p>foo</p> => foo
    #
    # source://algolia_html_extractor//lib/algolia_html_extractor.rb#102
    def extract_text(node); end

    # Get a relative numeric value of the importance of the heading
    # 100 for top level, then -10 per heading
    #
    # source://algolia_html_extractor//lib/algolia_html_extractor.rb#155
    def heading_weight(heading_level); end

    # source://algolia_html_extractor//lib/algolia_html_extractor.rb#24
    def run(input, options: T.unsafe(nil)); end

    # Generate a unique identifier for the item
    #
    # source://algolia_html_extractor//lib/algolia_html_extractor.rb#133
    def uuid(item); end
  end
end
